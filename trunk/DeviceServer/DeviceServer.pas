program DeviceServer;
{$mode objfpc}
uses PhysMach,webserver,cthreads,classes,crt;

{ $Id$ }

{ This software is copyright (c) 2008 by Hartmut Eilers <hartmut@eilers.net> 	}
{ It is distributed under the terms of the GNU GPL V2 see http://www.gnu.org 	}

{ 20.02.2008		Start of project					}



const
	Forever=false;
	MaxThreads=25;

var
	i		: LongInt;
	ThreadHandle	: array[1..MaxThreads] of LongInt;
	ThreadName	: array[1..MaxThreads] of string;
	shutdown	: Boolean;
	Counter		: LongInt;


procedure embeddedWeb;
var
	laber,SeitenStart,SeitenEnde,Seite,cnt,Values	: string;

{ every time the special URL is called this procedure generates 	}
{ some dynamic content, delivered to the browser					}
begin
	inc(Counter);
	SeitenStart:='<html><body>embedded special data:';
	SeitenEnde:=' <br><a href=/index.html>back</a></body></html>';
	Values:='Values: ';
	for i:=1 to 8 do begin
		str(analog_in[i],laber);
		Values:=Values+' '+laber;
	end;
	Values:=values+'<br>';
	laber:='<br>Data I last got via HTTP:'+GetParams+'<br>';
	str(Counter,cnt);
	Seite:=SeitenStart+cnt+Values+laber+SeitenEnde;
	writeln('embeddedWeb:>Sending Page');
	SendPage(Seite);
	writeln('embeddedWeb:>Page Send, finished');
end;



function AnalogReader(p: Pointer):LongInt;
begin
	writeln('started Analog Reader Thread..');
	repeat
		PhysMachReadAnalog;
		delay(100);
	until shutdown=true;
	writeln('Analog Reader going down..');
end;


function WebserverThread(p: Pointer):LongInt;
begin
	writeln('started Webserver Thread, going to start Server...');
	{ start the webserver with IP, Port, Document Root and Logfile }
	start_server('127.0.0.1',10080,'./docroot/','./pwserver.log');
	writeln('Webserver started, ready to serve');
	{ register special URL for content generated by this program }
	SetupSpecialURL('/status/index.html',@embeddedWeb );
	//SetupVariableHandler(@embeddedWebReadParams);

	// initialize Hardware
	PhysMachInit;
	PhysMachloadCfg('DeviceServer.cfg');
	writeln('detected Hardware: ',HWPlatform);
	PhysMachWriteDigital;


	repeat
		serve_request;
		delay(100);
	until Shutdown=true;
	writeln('Webserver going down..');
	WebserverThread:=0;

end;



begin
	Counter:=0;
	i:=1;
	writeln('Starting Webserver Thread...');
	ThreadName[i]:='Webserver';
	ThreadHandle[i]:=BeginThread(@WebserverThread,pointer(i));
	inc(i);
	writeln('starting AnalogReader..');
	ThreadName[i]:='AnalogReader';
	ThreadHandle[i]:=BeginThread(@AnalogReader,pointer(i));

	repeat
		delay(500);
	until keypressed;
	shutdown:=true;
	WaitForThreadTerminate(ThreadHandle[1],500);
	WaitForThreadTerminate(ThreadHandle[2],500);
end.
