# { $Id: DeviceServer.cfg 941 2016-09-30 19:54:42Z lnetwalker $ }
# Config file for Physical Machine Lib
# only lines starting with  [DEVICE|PORT] are read, rest is discarded
# except for the case when a callback function is registered
# see documentation for details !


# example of possible devices and their initstring
# programm PIO to A in, B out, C in
# DEVICE P $307:$99

# possible devices are: I = IO Warrior 40
#			D = DIL/NetPC DNP1486 (deprecated )
#			P = 8255 based ISA Slot PIO
#			L = printer port      ( untested )
#			R = Random
#			J = Joystick
#			H = HTTP
#			B = BMCM devices like usb pio, usb ad etc
#			E = external program
#			F = LPT Port Funk modul
#			K = Kolter Electronic PCI 1616, OptoPCI, PCI OptoRel ( untested )
#			O = Kolter Opto3 ISA Card ( untested )
#			T = Kolter ADC12LC ISA Card ( untested )
#			U = HTronic USB8 IO
#			N = Pollin AVR-NET-IO
#			G = Gnublin internal IO

# besides the Tags for the PhysMach ( DEVICE and PORT )
# it is possible to register a function for the config in the PhysMach
# which is called with every line found in the cfg file which is not a DEVICE or PORT
# Line. see the end of file for examples for the sps configuration

#DEVICE P $307:$99	# the PIO needs the config port and the configuration value
#DEVICE I dummy
#DEVICE L dummy
#DEVICE D dummy
#DEVICE R d:300
#DEVICE J /dev/input/js0
#DEVICE H http://www.server.com/path/to/read/data?§http://www.server.com/path/to/write/data?
#DEVICE B usb-pio:/dev/ttyACM0:$ffffffff:$ffffffff:$ffffffff:
#DEVICE B usb-ad:/dev/ttyACM0:$ffffffff:$00000000:
#DEVICE E program:param:param:param:
#DEVICE F [usb|par],dvicefile,transmit Time
#DEVICE K $dc00[:d]
#DEVICE O $314[:d]
#DEVICE T $170
#DEVICE U /dev/ttyACM0
#DEVICE N server:port
#DEVICE G iioo

#generic config lines
#PORT [I|O|C|A|U] iogroup Address devicetype
#	 I=input
#	 O=output
#	 C=counter
#	 A=analog in
#	 U=analog out

# Gnublin internal IO
#PORT I    1  10   G
#PORT O    1  10   G
#PORT A    1  11   G
#PORT A    2  12   G
#PORT A    3  13   G
#PORT A    4  14   G


# Funk Modul
# transmit time auf 1 sekunde setzen
#DEVICE F usb:/dev/ttyACM0:1000
#PORT O   2 $378  F

# Random inputs ( for debugging )
DEVICE R d:100
PORT I   1  $00  R
PORT I   5  $01  R

# 8255 ISA PIO
#DEVICE P $307:$99
# possible config for above initialized PIO
#PORT I   1 $304  P
#PORT O   1 $305  P
#PORT C   1 $306  P

# Kolter Electronic PCI 1616,
#DEVICE K $dc00
# Kolter Electronic OptoPCI, PCI OptoRel
#DEVICE K $dc00:d
#PORT O   1 $dc00 K
#PORT O   2 $dc01 K
#PORT I   1 $dc04 K
#PORT I   2 $dc05 K

# Kolter Opto3 ISA IO Card
#DEVICE O $314:d
#PORT I   1 $314 K
#PORT I   2 $315 K
#PORT O   1 $316 K
#PORT O   2 $317 K

# Kolter ADC12LC ISA Card
#DEVICE T $170
#PORT A   1    0 T
#PORT A   2    1 T
#PORT A   3    2 T
#PORT A   4    3 T
#PORT A   5    4 T
#PORT A   6    5 T
#PORT A   7    6 T
#PORT A   8    7 T
#PORT A   9    8 T
#PORT A  10    9 T
#PORT A  11   10 T
#PORT A  12   11 T
#PORT A  13   12 T
#PORT A  14   13 T
#PORT A  15   14 T
#PORT A  16   15 T


# erster IO Warrior 40
# der zweite IOwarrior Port 0 ist ioport=20
# der dritte IOwarrior Port 0 ist ioport=30
# der vierte IOwarrior Port 0 ist ioport=40
# Port are adressed from 0 to 3
# port0 in,port 0 cnt, port1 in, port2 out, port3 out

#DEVICE I dummy
#PORT I 2 $10 I
#PORT I 3 $11 I
#PORT C 1 $10 I
#PORT O 2 $12 I
#PORT O 3 $13 I

# parallel port
#DEVICE L dummy
#PORT O   1 $3bc L
#PORT I   1 $3bd L
#PORT C   1 $379 L

# DIL NetPC ( PORT Addressess are dummies )
#DEVICE D dummy
#PORT I   1  $20  D
#PORT O   1  $21  D
#PORT C   1  $22  D

# Joystick
# der erste Joystick ist ioport=$10
# der zweite Joystick ist ioport=$20
# der dritte Joystick ist ioport=$30
# der vierte Joystick ist ioport=$40
# die zweite Stelle gibt bei
# analogen Ports die gewünschte Achse an ( 0-3 )
# bei den digitalen Inputs wird sie ignoriert
#DEVICE J /dev/input/js0
#PORT I   3   $11 J
# axis 0
#PORT A   1   $10 J
# axis 1
#PORT A   2   $11 J
# axis 2
#PORT A   3   $12 J
# axis 3
#PORT A   4   $13 J

# HTTP Access to eg device server to read Temperature from digitemp
# the adress is a parameter to the URL an may be used to address values
# it is appended to the end of the URL
#DEVICE H http://www.server.com/path/to/read/data?§http://www.server.com/path/to/write/data?
#PORT A   4  $21  H
#PORT I   4  $22  H

# AVR-NET-IO Access parameters are Server Name or IP and Port Number
#DEVICE N 10.63.9.40:50290
#PORT I 1 11 N
#PORT O 1 11 N
#PORT A 1 11 N
#PORT A 2 12 N
#PORT A 3 13 N
#PORT A 4 14 N

#BMCM USB PIO
#DEVICE B usb-pio:/dev/ttyACM0:$ffffffff:$ffffffff:$00000000:
#PORT I   1    0 B
#PORT I   2    1 B
#PORT O   1    2 B

#BMCM USB AD
#DEVICE B usb-ad:/dev/ttyACM0:::
#PORT I   3   10  B
#PORT O   2   11  B
#PORT A   1  $12  B
#PORT A   2  $13  B
#PORT U   6    1  B
#PORT U   7    2  B

# IO Warrior 40 Testboard
#DEVICE I dummy
#PORT I 1 $10 I
# iow24
#PORT O 1 $11 I
# iow40
#PORT I 2 $11 I
#PORT I 1 $12 I
#PORT O 2 $13 I

#external Program
DEVICE E ./Agents/hostdata.py:
PORT A   1   11  E
PORT A   2   12  E

#external Program
#DEVICE E ./digiin.sh:
#PORT I   4   11  E

# external programm
#DEVICE E ./digitemp.sh:
#PORT A 1 11  E
#PORT A 2 12  E
#PORT A 3 13  E
#PORT A 4 14  E


# New config Data example for SPS
# here comes the config data for sps which was in sps.cfg
# all values are for the printing
# v = value for Linefeed
# g = value to switch on Capital letters
# l = number of lines per page
# f = value for formfeed
#v10
#g14
#l60
#f12

#HTronic USB8 IO
#DEVICE U /dev/ttyACM0
#PORT A 1   1 U
#PORT A 2   2 U
#PORT A 3   3 U
#PORT A 4   4 U
#PORT A 5   5 U
#PORT A 6   6 U
#PORT A 7   7 U
#PORT A 8   8 U
#PORT O 1   2 U

#Gnublin
#DEVICE G ooii
# initstring is 4 chars each one i or o for in and out
# representing the gpio 11, 13, 14, 15
# assigned as bits 0-3
# gio3 is fixed set to output and assigned as highest bit
# and added in front of initstring
# DeviceNumber is currently not used
# Therefor O1 = gpio 11
#          O2 = gpio 13
#          O8 = gpio 3 = LED
#          I1 = gpio 14
#          I2 = gpio 15
#PORT I    2  10   G
#PORT O    2  10   G
#PORT A    1  11   G
#PORT A    2  12   G
#PORT A    3  13   G
#PORT A    4  14   G

# ARM generic
#DEVICE A 5,6,7,8,9,12,13,14,16,21,24,26
# in this is the List of the used GPIO Lines
#PORT O	2 11 A
#     | | |
#     | | refers to the Address 11
#     | --------------------------
#     ------------------          |
#                       |         |
# configures the OutputSignals O9-O16 to the pins defined in Assign statement for adress 11
#PORT I 1 12 A
# configures the Input Signals 1-8 to Pin Assigments for Adress 12
#ASSIGN A 11 1 5
#ASSIGN A 12 1 6
# these assigments connect O9 with GPIO5 as Output and I9 with GPIO6 as Input
