README for PhysMach Unit

PhysMach is a Pascal Unit which builds up a kind of machine with a number of 
digital and analog In- and Outputs, internal bit oriented variables, timers and 
counters.

These properties can be mapped with a config file to different real hardware devices
like the printerport, joystick, PIO, IO Warrior or DIL/Net PC.

You can write your programs using the resources of the PhysMach and use those real hardware
without even knowing how to really program them. 

What you need to do in your program is Init the Physical Machine, load the config file
and after that youre able to read and write to all these devices by using simple procedures.

It is possible to define mixtures of all these devices to form the Physical machine.

The Physical machine groups 8 bits into a group of e.g. inputs and every group can be mapped 
to a different real hardware. 

The unit can be used with Linux or Windows, but the OSes support different hardware.
Currently only under Linux all above mention hardware is usable, on windows only the IO Warrior
can be used.

The hardware drivers are units of their own and are used by the Physical Machine. To extend the 
Physical Machine to new hardware you need to write a driver for the hardware and add sections in 
Phys Mach  to read and write to this hardware.

Every Hardware driver needs at least routines to init the hardware, and to read and write to the 
hardware.

Dependecies for the different hardware modules are:
IO Warrior		->		installed IOW developer kit libraries
Joystick		->		generell Linux specific drivers for analog joystick interface
Printer Port	->		nothings special except that your program needs to run Suid root
PIO ( ISA )		->		nothings special except that your program needs to run Suid root
DIL/Net PC		->		nothings special except that your program needs to run Suid root

For easy testing there is also included a driver which generates random signals.

