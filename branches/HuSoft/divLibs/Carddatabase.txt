Card Database für meine Progamm Projekte.

{ $Id$ }

(last used Card ID = 008 )

spsdatalogger
	( 004 ) READ Real Values
	connect to sps interpreter and read the real values from the sps

DONE( 005 ) Timebase     13.11.06 SEE QGTK2.PAS
	Fix the error with the change of the timebase ( remove a timer, and start a funtion with a new timer value)


Embedded Webserver
	( 001 ) QueueDepthMonitor
	Queue Tiefe wird vom webserver selbst überwacht, und bei entsprechender Queuetiefe werden keine
	weiteren requests mehr beantwortet, ggf wird der server runtergefahren und der Port freigegeben,
	 als Schutz gegen denial of service Attacken.
	Dieser Zustand wird an das embeddende Programm gemeldet.

SPS
	( 003 ) NOTMODUS
	der Interpreter reagiert auf Notsituationen, in dem er sprezielle Befehle, die als Notmodus 
	gekeinzeichnet sind, ausführt. Die MArkierung könnte der Befehl nn NOP   Emergency sein, alle
	Befehle nach der Zeilennummer nn bis zum Ende der AWL werden als Notmodus ausgeführt.

	Danach wird die Abarbeitung der AWL angehalten und auf das Wiederstartsignal gewartet.
	Der Notmodus wird als Logentry im Syslog notiert. Das Wiederanfahren des Programmes bedeutet
	ein start der AWL wie beim allerersten Start. ( Eingange, Ausgange, Zähler klar definiert etc. )
	Der Notmodus kann z.b. bei Syntaxfehlern aufgerufen werden, bei Denial of Service Attacken gegen
	den embedded Webserver, Power failure ( USV )  oder ähnlichem ausgelöst werden

	( 002 ) START DOKUMENTIEREN
	Es ist oftmals ganz wichtig zu wissen in welchem Zustand die AWL startet. Das heisst, es wird klar
	definiert, mit welchen werten Eingange, Ausgange, Zähler etc starten.

	( 006 ) include Embedded Webserver
	build the Web enhanced version of the sps interpreter

	( 007 ) Ini Files
	Introduce configuration of sps with ini files ( see unit for fpc )

OSI
	( 008 ) Read Analog Card 
	write stuff to really read the analog card
	
